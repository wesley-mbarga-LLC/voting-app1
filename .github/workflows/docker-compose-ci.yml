name: CI - Voting App with Docker Compose

on:
  workflow_dispatch:
  push:
    branches: [ master ]

defaults:
  run:
    shell: bash

jobs:
  compose-test:
    name: Compose test on build runner
    runs-on:
      group: Wesley-group-runner
      labels:
        - self-hosted
        - build

    # If no group, replace above with:
    # runs-on: [self-hosted, build]

    timeout-minutes: 25

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Show runner info
        run: |
          echo "Runner name: ${{ runner.name }}"
          echo "Runner labels: ${{ runner.labels }}"
          echo "Runner OS/Arch: ${{ runner.os }} / ${{ runner.arch }}"

      - name: Pre-cleanup - Stop any previously running containers
        working-directory: ./voting-app
        run: docker compose -f docker-compose.yaml down -v || true

      - name: Start Docker Compose stack
        working-directory: ./voting-app
        run: docker compose -f docker-compose.yaml up -d --build

      - name: Wait for services to stabilize
        run: sleep 20

      - name: Check running containers
        run: docker ps

      - name: Expose VM Public IP and Ports
        run: |
          echo "Detecting external IP..."
          PUBLIC_IP=$(curl -s ifconfig.me)
          echo "-----------------------------------"
          echo "✅ Your application is now running!"
          echo "🌐 Public IP: $PUBLIC_IP"
          echo "🔗 Vote service:   http://$PUBLIC_IP:5000"
          echo "🔗 Result service: http://$PUBLIC_IP:5001"
          echo "-----------------------------------"
          echo "Keeping the app live for 5 minutes..."
          sleep 300

      - name: Health check - Vote service (retries)
        run: |
          for i in {1..20}; do
            if curl -fsS --max-time 3 http://127.0.0.1:5000/ >/dev/null; then
              echo "Vote service is healthy"; exit 0
            fi
            echo "Waiting for Vote service... ($i/20)"; sleep 3
          done
          echo "Vote service is not responding"; exit 1

      - name: Health check - Result service (retries)
        run: |
          for i in {1..20}; do
            if curl -fsS --max-time 3 http://127.0.0.1:5001/ >/dev/null; then
              echo "Result service is healthy"; exit 0
            fi
            echo "Waiting for Result service... ($i/20)"; sleep 3
          done
          echo "Result service is not responding"; exit 1

      - name: Tear down Docker Compose stack
        if: always()
        working-directory: ./voting-app
        run: docker compose -f docker-compose.yaml down -v
